////////////////////////////////////////////////////////////////////////////////
//                    COMUNICACIÓN I2C EN TRE DOS PIC                         //
//                                                                            //
//                      Aplicación para PIC MAESTRO                           //
//                                                                            //
//       El PIC maestro lee teclado y envía el dato al PIC esclavo via I2C    //
//                      que lo mostrará en un lcd.                            //
//                                                                            //
//                            (c) RobotyPic                                   //
////////////////////////////////////////////////////////////////////////////////

#include <16F887.h>

#fuses XT,PUT,NOPROTECT,BROWNOUT,NOLVP,NOWDT
#use delay (clock=4000000)                      

#use i2c(MASTER, SDA=PIN_C4, SLOW, SCL=PIN_C3, NOFORCE_SW)

//#define use_portb_kbd TRUE       //Configuración puerto b para lectura teclado
//#include <kbd.c>                 //Carga archivo para control de teclado

#use standard_io(b)
#use standard_io(c)
#use FIXED_IO( B_outputs=PIN_B5,PIN_B4,PIN_B3 )

#define Led1   PIN_B3
#define Led2   PIN_B4
#define Led3   PIN_B5

int tecla;                       //Dato a transmitir
int8 incoming;
   
/******************************************************************************/
/***************************** Envío I2C **************************************/
    
void envio_I2C (){
   
      i2c_start();         //Comienzo de la comunicación I2C ...
      i2c_write(0x46);     //...con la dirección del PIC esclavo...
      i2c_write(tecla);    // Envia dato
      i2c_stop();          //Finalización de la transmisión
  }

/******************************************************************************/
/*************************** FUNCIÓN PRINCIPAL ********************************/

void main(){
  // kbd_init();                   //Inicializa función de teclado
   //port_b_pullups(TRUE);         
    
   while (true){
      
// Lectura del teclado     
  //    tecla=kbd_getc();       //En "tecla" valor de la tecla pulsada
  
      if(input_state(PIN_B0) == 1){tecla=1;envio_I2C();}
      if(input_state(PIN_B1) == 1){tecla=2;envio_I2C();}
      if(input_state(PIN_B2) == 1){tecla=3;envio_I2C();}
      
      i2c_start();                          // start I2C
      i2c_write(0x47);
      //i2c_write(0x80);
      incoming = i2c_read(0);             // get base status
       i2c_stop();                          // stop I2C
       if (incoming==1){output_high(Led1);}else{output_low(Led1);}
       if (incoming==2){output_high(Led2);}else{output_low(Led2);}
       if (incoming==3){output_high(Led3);}else{output_low(Led3);}
       delay_ms(100);
   }
}
      


       
   


   
      
   
   

